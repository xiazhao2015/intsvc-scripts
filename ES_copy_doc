1. Log in the node machine get in step 0, make sure the time zone is identical within those inside fluentd pod:
$ date +%z

Use sudo to write directly a future date/times log entry in /var/log/messages :

Refer to https://github.com/openshift/origin-aggregated-logging/blob/master/hack/testing/test-datetime-future.sh#L97-L102 for detailed steps:

$dt=date  +"%b %d %H:%M:%S" --date="1 hour hence"
Aug 05 03:17:16
$uq=`uuidgen`
ea234b96-fc61-4c8c-99e0-d42de46f500d
$echo "Aug 05 03:17:16 localhost ea234b96-fc61-4c8c-99e0-d42de46f500d: ea234b96-fc61-4c8c-99e0-d42de46f500d message to verify" | sudo tee -a /var/log/messages > /dev/null

2. Wait for a while until fluentd picked the log entry in step #1


3. Query es/es-ops from kibana/kibana-ops pod for index .operations, and check result:

Non-ops env:
oc rsh ${kibana-pod}
curl --connect-timeout 1 -s -k \
       --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key \
       https://logging-es:9200/.operations*/_count\?q=ident:95edd9e2-3b4c-4030-ae59-e39142497d51 |\
       python -mjson.tool

Ops env:
oc rsh ${kibana-ops-pod}
curl --connect-timeout 1 -s -k \
       --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key \
       https://logging-es-ops:9200/.operations*/_count\?q=ident:95edd9e2-3b4c-4030-ae59-e39142497d51 |\
       python -mjson.tool

#Login frontend pod, then call frontend svc to create log entry in test index
oc get po -n test | grep frontend
oc rsh <frontend-pod>
curl --connect-timeout 1  http://172.31.22.26:5432/Iamok

#query es from kibana check if log entry exist
oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k \
       --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key \
       https://logging-es:9200/.test*/_count\?q=message:Iamok |\
       python -mjson.tool
1
2
oc rsh logging-kibana-1-i9rct

#call logging to write logs in /var/log/messages directly to create log entry in .operations index
logger -i -p local6.info -t Iamok Iamok


when OPS=true:
#query es from kibana-ops check if log entry exist
oc exec logging-kibana-ops-1-eoyot -- curl --connect-timeout 1 -s -k \
       --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key \
       https://logging-es-ops:9200/.operations*/_count\?q=ident:Iamok |\
       python -mjson.tool
1
2
oc rsh logging-kibana-ops-1-eoyot

when OPS=false:
oc exec logging-kibana-1-eoyot -- curl --connect-timeout 1 -s -k \
       --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key \
       https://logging-es:9200/.operations*/_count\?q=ident:Iamok |\
       python -mjson.tool

$ oc get po -o wide
NAME                              READY     STATUS      RESTARTS   AGE       IP          NODE
logging-curator-1-761z7           1/1       Running     0          27m       10.2.0.7    ip-172-18-15-157.ec2.internal
logging-curator-ops-1-mj8k6       1/1       Running     0          27m       10.2.0.8    ip-172-18-15-157.ec2.internal
logging-deployer-8jzlf            0/1       Error       0          48m       10.2.0.2    ip-172-18-15-157.ec2.internal
logging-deployer-kn5mp            0/1       Completed   0          30m       10.2.0.4    ip-172-18-15-157.ec2.internal
logging-es-ops-knpwuw8f-1-ca4oq   1/1       Running     0          27m       10.2.1.7    ip-172-18-14-36.ec2.internal
logging-es-v5xt306x-1-h2i2s       1/1       Running     0          27m       10.2.1.5    ip-172-18-14-36.ec2.internal
logging-fluentd-6k5m4             1/1       Running     0          28m       10.2.1.4    ip-172-18-14-36.ec2.internal
logging-fluentd-s3wxu             1/1       Running     0          1m        10.2.0.11   ip-172-18-15-157.ec2.internal
logging-kibana-1-w2gls            2/2       Running     1          27m       10.2.0.9    ip-172-18-15-157.ec2.internal
logging-kibana-ops-1-a2a22        2/2       Running     0          27m       10.2.0.2    ip-172-18-15-157.ec2.internal

